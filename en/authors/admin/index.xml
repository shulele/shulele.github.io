<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SHU</title>
    <link>https://www.shulele.net/en/authors/admin/</link>
      <atom:link href="https://www.shulele.net/en/authors/admin/index.xml" rel="self" type="application/rss+xml" />
    <description>SHU</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sat, 01 Feb 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://www.shulele.net/img/icon-192.png</url>
      <title>SHU</title>
      <link>https://www.shulele.net/en/authors/admin/</link>
    </image>
    
    <item>
      <title>Leter to Nature: Stop using the offensive virus names</title>
      <link>https://www.shulele.net/en/post/20200201_nature/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://www.shulele.net/en/post/20200201_nature/</guid>
      <description>

&lt;h2 id=&#34;stop-using-the-offensive-virus-names&#34;&gt;Stop using the offensive virus names&lt;/h2&gt;

&lt;p&gt;Inappropriate naming of the new human disease inevitably causes prejudice and discrimination upon particular people and undue fear of the diseases on global social media, although unintentionally.&lt;/p&gt;

&lt;p&gt;After the outbreak of Novel Coronavirus (2019-nCoV) causing a severe respiratory illness, some of the research papers and news on nature (such as Nature 577, 450 (2020), Nature 577, 605-607 (2020), doi: 10.1038/d41586-020-00146-w, doi: 10.1038/d41586-020-00180-8, doi: 10.1038/d41586-020-00253-8 and doi: 10.1038/d41586-020-00262-7 ) and other media used &amp;ldquo;&lt;em&gt;China Coronavirus&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;Wuhan Coronavirus&lt;/em&gt;&amp;rdquo;, even &amp;ldquo;&lt;em&gt;Chinese Virus&lt;/em&gt;&amp;rdquo;. Such inappropriate naming did not only lead to affronted counteraction in Chinese social media, but also armed the notorious sinophobia and anti-Asian racism around the world. The people in the region suffering short-term contagious virus now will be stigmatized by far-reaching hostility from outside.&lt;/p&gt;

&lt;p&gt;I propose the editors, journalists and researchers on nature and broad science community to avoid such inappropriate names of any current and future human infectious diseases or viruses. Even though it is difficult and time-consuming to rename the diseases and viruses we named before, such as Middle East Respiratory Syndrome (MERS-CoV), Spanish flu, Ebola Virus, we must take immediate action of adapting no-harm names.&lt;/p&gt;

&lt;p&gt;In 2015, for minimizing &amp;ldquo;unnecessary negative impact of disease names on trade, travel, tourism or animal welfare, and avoid causing offense to any cultural, social, national, regional, professional or ethnic groups&amp;rdquo;, the World Health Organization (WHO) issued guidelines that suggested scientists, journalist and health officials to use more neutral, generic terms to name new human diseases. The guideline is applicable to any unrecognized infections, syndromes, viruses, and diseases of humans that unreported in human and harm human health potentially.&lt;/p&gt;

&lt;p&gt;In scientific communities, such as The Lancet and The New England Journal of Medicine, the &amp;ldquo;2019 novel coronavirus&amp;rdquo; is referenced dominantly, which is the no-harm name describing the 2019-nCoV. As the names of the new diseases and viruses will make their way into human history, we must select the more neutral and non-offensive names methodically.&lt;/p&gt;

&lt;p&gt;After one week, I got reply:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thank you for your submission to Correspondence. We have received &lt;strong&gt;a large number of letters relating to the new coronavirus, many of which make overlapping points or points already covered by our reporters&lt;/strong&gt;. We have therefore chosen a representative sample for publication.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The wrong names are still on Nature.com, I will continue doing my best to let them correct them.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spiral calendar</title>
      <link>https://www.shulele.net/en/post/20200110_calender/</link>
      <pubDate>Fri, 10 Jan 2020 12:05:38 +0000</pubDate>
      <guid>https://www.shulele.net/en/post/20200110_calender/</guid>
      <description>&lt;p&gt;Is the current calendar is the best or only way to represent days?&lt;/p&gt;

&lt;p&gt;The days we experienced, undergoing, and expecting are recorded a piece of paper; we call it a calendar, where marks days of years, months, weeks, and holidays. The current calendar appearance that organized with month and weeks are very efficient to display the days of week and month.&lt;/p&gt;

&lt;p&gt;But, the calendar drops the original meaning of &amp;ldquo;Month&amp;rdquo;,  which was related to the moon and moon phase, while the lunar calendar and lunisolar calendar (such as Chinese Calendar) still conserve the sense in the month. The month is defined according to the moon phase.&lt;/p&gt;

&lt;p&gt;One month is defined from a black moon to the next black moon, as a lunar month. Since the Synodic period is ~29.5 days, some months have 29 and the others have 30 days.  Winter(northern sphere) has more 29-day months, while summer has more 30-day month, because of the orbit speed of the earth.&lt;/p&gt;

&lt;p&gt;Another problem with the mismatch of the lunar month is the number of days in a solar year.  We have to find the common multiple between the moon synodic period and the orbital period of the earth.  The days of a solar year is 365.25 days, but the number of days in 12 lunar months is ~355 days.  The pure lunar calendar simply ignores the difference, so that the number of years is different from solar and lunar years. The Chinese calendar, which is a lunisolar calendar, solves the problem with leap months.  Seven leap months are inserted in every 19 years, such that days in 19 Chinese years are the same as 19 Julian or solar years.&lt;/p&gt;

&lt;p&gt;Above is the background.&lt;/p&gt;

&lt;p&gt;I want to have a calendar that shows date, days of weeks and the moon phases together, and that represents the endless of time.
Here is the calendar:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;feature.png&#34; alt=&#34;Spiral calendar&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Install Sundials 5.x or Cvode on Mac Linux System</title>
      <link>https://www.shulele.net/en/post/20191119_sundials/</link>
      <pubDate>Tue, 19 Nov 2019 22:05:38 +0000</pubDate>
      <guid>https://www.shulele.net/en/post/20191119_sundials/</guid>
      <description>

&lt;h2 id=&#34;sundials-suite-of-nonlinear-and-differential-algebraic-equation-solvers&#34;&gt;SUNDIALS: SUite of Nonlinear and DIfferential/ALgebraic Equation Solvers&lt;/h2&gt;

&lt;p&gt;SUNDIALS (&lt;a href=&#34;https://computing.llnl.gov/projects/sundials&#34; target=&#34;_blank&#34;&gt;https://computing.llnl.gov/projects/sundials&lt;/a&gt;) is a very powerful mathematical library that is helpful in solving engineering and scientific problems efficiently. CVODE is one of the tools, aiming to solve Ordinary Differential Equation, in C language.
In the Solver of Hydrologic Unstructured Domain (SHUD) model, the system of ODEs describing the hydrological processes is fully coupled and solved simultaneously at each  time step ($ \Delta t=t&lt;em&gt;{n}-t&lt;/em&gt;{n-1}$)  using CVODE, a stiff solver based on Newton-Krylov iteration.&lt;/p&gt;

&lt;p&gt;The latest version of SUNDIALS is v5.0.0, released on November 2019. Let&amp;rsquo;s install it on a Mac OS or Linux system.&lt;/p&gt;

&lt;p&gt;I test the installation on &lt;strong&gt;Mac 10.13&lt;/strong&gt; and  &lt;strong&gt;Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-66-generic x86_64)&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Download SUNDIALS, via &lt;a href=&#34;https://computing.llnl.gov/projects/sundials/sundials-software&#34; target=&#34;_blank&#34;&gt;https://computing.llnl.gov/projects/sundials/sundials-software&lt;/a&gt;.
Or get latest SUNDIALS on GitHub:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/LLNL/sundials.git
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, you must have the source code of SUNDIALS in your folder.
  Please enter the folder.
  Let&amp;rsquo;s assume you are in the same level of &lt;em&gt;sundials&lt;/em&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a install folder.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The installation folder names &lt;strong&gt;installSundials&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  mkdir installSundials
  cd installSundials

  rm -rf builddir instdir srcdir

  mkdir builddir
  mkdir instdir
  mkdir srcdir

  cd builddir/
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Configure the installation with CCMAKE.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are two ways to configure the installation. One is GUI, and the other is command line.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Option 1&lt;/strong&gt;, type command blow:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ccmake ../../sundials/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will see a screen like this:
  &lt;img src=&#34;featured.png&#34; alt=&#34;CCMAKE Screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Use your cursor, move to line &lt;strong&gt;&lt;em&gt;CMAKE_INSTALL_PREFIX&lt;/em&gt;&lt;/strong&gt;, which is the path SUNDIALS will be installed. Press Enter to start edit the line. I install it on &lt;strong&gt;/usr/local/sundials&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another path you may change is the path of example code, &lt;strong&gt;&lt;em&gt;EXAMPLES_INSTALL_PATH&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Next, you need to select which solver you want to install, such as, ARKODE, CVODE, CVODES IDA, IDAS, KINSOL. They are on the top of your GUI; press Enter to enable or disable it. Since I need the CVODE only, I turn the &lt;strong&gt;&lt;em&gt;BUILD_CVODE&lt;/em&gt;&lt;/strong&gt; option ON and keep the rest of them OFF.&lt;/p&gt;

&lt;p&gt;If you have OpenMP on your machine and you need the support of OpenMP parallel in your program, you can turn the &lt;em&gt;OPENMP_ENABLE&lt;/em&gt; ON.&lt;/p&gt;

&lt;p&gt;After edits, press &lt;strong&gt;C&lt;/strong&gt; to configure, and press &lt;strong&gt;C&lt;/strong&gt; again, when &lt;strong&gt;g&lt;/strong&gt; option shows up on the bottom, press &lt;strong&gt;g&lt;/strong&gt; to generate configuration files.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Option 2&lt;/strong&gt;, you can use command to realise the edits above, for example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_INSTALL_PREFIX=/usr/local/sundials \
-DEXAMPLES_INSTALL_PATH=../example \
-DBUILD_CVODE=ON \
-DBUILD_CVODES=OFF \
-DBUILD_ARKODE=OFF \
-DBUILD_CVODES=OFF \
-DBUILD_IDA=OFF \
-DBUILD_IDAS=OFF \
-DBUILD_KINSOL=OFF \
-DOPENMP_ENABLE=ON \
../../sundials/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The command above configure installation, to install SUNDIALS to &lt;em&gt;/usr/local/sundials&lt;/em&gt;, the examples to &lt;em&gt;../example&lt;/em&gt;, install &lt;em&gt;CVODE&lt;/em&gt; only, with OpenMP support.&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t need OpenMP or your OpenMP may result in errors, use the command below:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  cmake -DCMAKE_INSTALL_PREFIX=/usr/local/sundials \
   -DEXAMPLES_INSTALL_PATH=../example \
   -DBUILD_CVODE=ON \
   -DBUILD_CVODES=OFF \
   -DBUILD_ARKODE=OFF \
   -DBUILD_CVODES=OFF \
   -DBUILD_IDA=OFF \
   -DBUILD_IDAS=OFF \
   -DBUILD_KINSOL=OFF \
   -DOPENMP_ENABLE=OFF \
   ../../sundials/
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;make and install&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is simple and easy, run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  make
  make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sometimes, if the system may require higher previlage. If so, please try to use sudo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  make
  sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If there is no error occur, the SUNDIALS is installed successfully. Congrats.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Test the SUNDIALS library with the examples.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Enter the example folder,  &lt;em&gt;../example&lt;/em&gt; as the &lt;strong&gt;Option 2&lt;/strong&gt; in step 3. You will see several examples.
    &lt;img src=&#34;example.png&#34; alt=&#34;example&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Use make to compile all of them:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   cd ../example/cvode/serial/
   ls
   make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After make, you will see files like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;outfile.png&#34; alt=&#34;outfile&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Test the program:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./cvAdvDiff_bnd

./cvKrylovDemo_ls
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;test.png&#34; alt=&#34;TEst&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now, you can use SUNDIALS/CVODE in your own numeric solver.&lt;/p&gt;

&lt;p&gt;Be patient, you will meet more challenges.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automatic hydrologic deployment and modeling</title>
      <link>https://www.shulele.net/en/project/mint/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://www.shulele.net/en/project/mint/</guid>
      <description>

&lt;p&gt;This project is the hydrologic modeling part of the project &lt;em&gt;Model Integration through Knowledge-Rich Data and Process Composition&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;introduction-of-project&#34;&gt;Introduction of project&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://mint-project.info&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;fig/MINTworkflow.png&#34; data-caption=&#34;Overview of the use of artificial intelligence techniques to support model integration&#34;&gt;
&lt;img src=&#34;fig/MINTworkflow.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Overview of the use of artificial intelligence techniques to support model integration
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;h2 id=&#34;tasks-in-hydrologic-modeling&#34;&gt;Tasks in hydrologic modeling&lt;/h2&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;featured.png&#34; data-caption=&#34;The completed workflow of hydrologic modeling with PIHM model and national/global data services.&#34;&gt;
&lt;img src=&#34;featured.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    The completed workflow of hydrologic modeling with PIHM model and national/global data services.
  &lt;/figcaption&gt;


&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;fig/Animation.gif&#34; data-caption=&#34;Animation of flood plant in South Sudan from 2001 to 2017 based on FLDAS data.&#34;&gt;
&lt;img src=&#34;fig/Animation.gif&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Animation of flood plant in South Sudan from 2001 to 2017 based on FLDAS data.
  &lt;/figcaption&gt;


&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;fig/pongo_dem.png&#34; data-caption=&#34;Elevation and PIHM mesh of the Pongo watershed in South Sudan&#34;&gt;
&lt;img src=&#34;fig/pongo_dem.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Elevation and PIHM mesh of the Pongo watershed in South Sudan
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;h2 id=&#34;accomplishment-of-the-project&#34;&gt;Accomplishment of the project&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;keep updating&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R Script to Animate Global NDVI</title>
      <link>https://www.shulele.net/en/post/20191003_r_animation/</link>
      <pubDate>Thu, 03 Oct 2019 00:15:07 +0000</pubDate>
      <guid>https://www.shulele.net/en/post/20191003_r_animation/</guid>
      <description>

&lt;p&gt;This script is to demonstrate the capability and scheme to realise the animation. You have to prepare your own data for this animation script.&lt;/p&gt;

&lt;h1 id=&#34;script-for-global-ndvi&#34;&gt;Script for Global NDVI&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;NDVI_GLOBAL201002.png&#34; alt=&#34;Global NDVI on Feb 2010&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rm(list=ls())
library(RoundAndRound)
# devtools::install_github(&#39;shulele/RoundAndRound&#39;)
col.fun=function(x){ colorspace::terrain_hcl(x, l=c(65,95),
                                             power=c(1/3, 1.5))  }
plotStar &amp;lt;- function(x, y, radius, angle=180, xyratio=1, ...){
  i &amp;lt;- 1:11
  alpha &amp;lt;- 2*pi / 10
  r &amp;lt;- radius * (i %% 2 + 1)/2
  omega &amp;lt;- alpha * i + angle * pi /180
  invisible(mapply(function(a, b, ...)
    polygon(r*sin(omega) + a, r*cos(omega) * xyratio + b, ...),
    x, y, ...))
}

# setwd(&amp;quot;~/Dropbox/文章天下事/Drafts/2018-CAWildfireMap/Rcode&amp;quot;)
#install.packages(&#39;ncdf4&#39;)
clib=c(&#39;ncdf4&#39;, &#39;raster&#39;,&#39;rgeos&#39;,&#39;rgdal&#39;,&#39;ggplot2&#39;, &#39;lattice&#39;)
tmp=lapply(clib, library, character.only=T)
key=&#39;NDVI_GLOBAL&#39;
cn=FALSE
# cn=TRUE
if(cn){dir.gif = file.path(&#39;../gif&#39;, paste0(key, &#39;_cn&#39;) )}else{
  dir.gif = file.path(&#39;../gif&#39;, paste0(key, &#39;_en&#39;) )}
dir.in = file.path(&#39;/Volumes/WD8T/FireIndex/RDS/NDVI&#39;)
dir.fig = file.path(&#39;../figure&#39;, key)
dir.rds = file.path(&#39;../RDS&#39;, key)
dlist = list(dir.in, dir.fig, dir.gif, dir.rds);
tmp=lapply(dlist, dir.create, showWarnings = F, recursive = T)

crs0=crs(&#39;+init=epsg:4326&#39;)

rds.riv = &#39;/Users/leleshu/Dropbox/PIHM/Projects/CommonData/Global/ne_10m_rivers_lake_centerlines_scale_rank/ne_10m_rivers_lake_centerlines_scale_rank.RDS&#39;
sp.riv = readRDS( file =rds.riv)
map=readRDS(&#39;/Users/leleshu/Dropbox/PIHM/Projects/CommonData/Global/ADM/cntry02.RDS&#39;)
sp.prov = map
# map=gUnaryUnion(map)
crs(map)= CRS(&#39;+init=epsg:4326&#39;)
brk = sort(unique(c(-1, 0.2, seq(2 ,10, by = 1)/10) ))
brk = seq(0, 10, 1)/10
# cols=rev(colorspace::diverge_hsv(length(brk) ) )
cols=rev(col.fun(length(brk)));

ncols = length(cols)
pngout&amp;lt;-function(fn, wd = 12, ht = 8){
  png(fn, width=wd, height=ht, unit=&#39;in&#39;, res=150)
}
# years = 2010:2017;
years = 2002:2009;
ny=length(years)
# plot(map, axes=T)
# plotclock(time=c(1,NA,NA), add=T, orig=orig, rad=4, val=month.abb, ab=1.2)
if(cn){
  labs=c(&#39;1月&#39;,&#39;2月&#39;,&#39;3月&#39;,&#39;4月&#39;,&#39;5月&#39;,&#39;6月&#39;,&#39;7月&#39;,&#39;8月&#39;,&#39;9月&#39;,&#39;10月&#39;,&#39;11月&#39;,&#39;12月&#39;)
}else{
  labs=month.abb
}
# # library(foreach)
# library(doMC)
# library(doParallel)
# registerDoMC(6)
# plot(r)

xp=c(-180, 180, 180, -180)
yp=c(-90, -90, 90,90)
xt=seq(-180, 180, 30)
yt=seq(-90, 90, 30)
xtlab= rep(&#39;W&#39;, length(xt)); xtlab[xt&amp;gt;0]=&#39;E&#39;; xtlab[xt==0]=&#39;&#39;;xtlab=paste0(&#39;°&#39;, xtlab)
ytlab= rep(&#39;S&#39;, length(xt)); xtlab[xt&amp;gt;0]=&#39;N&#39;; xtlab[xt==0]=&#39;&#39;;ytlab=paste0(&#39;°&#39;, ytlab)

rcl=rbind(c(-1000, 0, 0), c(1, 10, 1) )
mygrid &amp;lt;- function(h=NULL, v=NULL,  lty=2, col=&#39;gray80&#39;, ...){
  fun.h=function(x){ abline(h=x,  lty=lty, col=col, ...)  }
  fun.v=function(x){ abline(v=x,  lty=lty, col=col, ...)  }
  if(!is.null(h)) tmp = lapply(h, fun.h)
  if(!is.null(v)) tmp = lapply(v, fun.v)
}

theta=1:360-90 - 360/12
cc.cols=col.fun(180)
cc.cols=c(cc.cols, rev(cc.cols))
cc=PCS2CCS(theta=theta, a=0.8)
ext=extent(map)
# x= foreach (iy = 1:ny) %dopar%{
for(iy in 1:ny){
  yr= years[iy]
  fn.in = file.path(dir.in, paste0(&#39;NDVI&#39;,yr,&#39;.RDS&#39;))
  message(iy,&#39;/&#39;, ny, &#39;\t&#39;,yr, &#39;\t&#39;, fn.in)
  dat = readRDS(fn.in)
  tag = substr(names(dat), 2, nchar(names(dat)) )
  nmon = length(tag)
  for(i in 1:nmon){
    rx=dat[[i]]
    r=reclassify(rx, rcl)
    message(i,&#39;/&#39;, nmon, &#39;\t&#39;, tag[i] )
    ttl = paste0(substr(tag[i], 1,4), &#39;.&#39;, substr(tag[i], 5,6) )
    pngout(file.path(dir.gif, paste0(key, tag[i], &#39;.png&#39;)), ht=6, wd=10)
    par(mar=c(2.5,2.5,1,1))
    # plot(map, axes=T)
    # plot(map,  col=&#39;white&#39;, axes=T, border=&#39;transparent&#39;)
    plot(xp, yp, type=&#39;n&#39;, axes=F, asp=1, xlim = range(xp), ylim=range(yp)); box();
    axis(side=1, at=xt);
    axis(side=2, at=yt)
    polygon(xp,yp, border=&#39;lightskyblue&#39;, col=&#39;lightskyblue&#39;)
    plot(add=T, map,  col=&#39;white&#39;, axes=T, border=&#39;transparent&#39;)
    mygrid(h=yt, v=xt)
    plot(add=T, r, breaks=brk, col=cols, legend=FALSE, axes=F);
    mtext(ttl, side=3, cex=2.5, line=-2, font=2, col=&#39;darkgreen&#39;)
    plot(add=T, sp.riv, col=rgb(0,0,1, 0.3), lwd=.5)
    mygrid(h=yt, v=xt)
    par(fig=c(c(0.1, 0.3)+.0, c(0.1,0.24)+.16), new=T, mar=c(0,0,0,0))
    tmp=density(r, plot=F)
    plot(tmp$x, tmp$y, type=&#39;l&#39;,  lwd=3, bg=&#39;gray80&#39;, col=3, axes=F,
         xlim=c(0,1), ylim=c(-1,4.5))
    plot(r, legend.only=TRUE, breaks=brk, col=cols,
         smallplot=c(.0, 1, .0, .13),
         legend.width=5, legend.shrink=.7, cex=5, horizontal=T,
         axis.args=list(col.axis=&#39;blue&#39;, lwd = 0,
                        font.axis=1, cex.axis=1, tck = 0, line=-.85,
                        labels=brk, cex.axis=1.2),
         legend.args=list(text=&#39;&#39;,col=4, side=3, font=1, cex=1.5)
    )
    x.mon=as.numeric(substr(tag[i], 5,6))
    if(cn){
      par(fig=c(c(0.3, 0.55)+.28, c(0.6,0.86)+.05), new=T, mar=c(0,0,0,0)
          ,family=&#39;STKaiti&#39;)
    }else{
      par(fig=c(c(0.3, 0.55)+.28, c(0.6,0.86)-.4), new=T, mar=c(0,0,0,0)
      )
    }
    plot(0, type=&#39;n&#39;, axes=F, xlab=&#39;&#39;, ylab=&#39;&#39;, xlim=c(-1,1)*1.5, ylim=c(-1,1)*1.5, asp=1)
    plotclock(time=c(x.mon,NA,NA),rad=1.1, val=labs, axes=F, add=T, fun.plot = polygon,
              val.arg = list(col=4, cex=.95))
    # color ring.
    points(cc, col=cc.cols, cex=1.4, pch=19)
    dev.off()
    # stop(&#39;stop&#39;)
  }
}

fps=6
fn.mov = file.path(dirname(dir.gif), paste0(key,&#39;_&#39;, fps,&#39;fps.mp4&#39;) )
cmd = paste(&#39;ffmpeg -r &#39;, fps,  &#39;-f image2 -s 1920x1080 -i &#39;, paste0(dir.gif, &#39;/*.png&#39;),
            &#39;-vcodec libx264 -crf 25  -pix_fmt yuv420p&#39;, fn.mov)
print(cmd)
# system(cmd)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;script-for-china-ndvi&#34;&gt;Script for China NDVI&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;NDVI_CN200202.png&#34; alt=&#34;China NDVI on Feb 2002&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rm(list=ls())
# devtools::install_github(&#39;shulele/RoundAndRound&#39;)
library(RoundAndRound)
library(xts)
col.fun=function(x){ colorspace::terrain_hcl(x, l=c(65,95),
                                             power=c(1/3, 1.5))  }
plotStar &amp;lt;- function(x, y, radius, angle=180, xyratio=1, ...){
  i &amp;lt;- 1:11
  alpha &amp;lt;- 2*pi / 10
  r &amp;lt;- radius * (i %% 2 + 1)/2
  omega &amp;lt;- alpha * i + angle * pi /180
  invisible(mapply(function(a, b, ...)
    polygon(r*sin(omega) + a, r*cos(omega) * xyratio + b, ...),
    x, y, ...))
}
#install.packages(&#39;ncdf4&#39;)
clib=c(&#39;ncdf4&#39;, &#39;raster&#39;,&#39;rgeos&#39;,&#39;rgdal&#39;,&#39;ggplot2&#39;, &#39;lattice&#39;)
tmp=lapply(clib, library, character.only=T)
key=&#39;NDVI_CN&#39;
# cn=FALSE
cn=TRUE
if(cn){
  dir.gif = file.path(&#39;../gif&#39;, paste0(key, &#39;_cn&#39;) )
}else{
  dir.gif = file.path(&#39;../gif&#39;, paste0(key, &#39;_en&#39;) )
}
dir.in = file.path(&#39;../RDS/NDVI_CN/&#39;)
dir.fig = file.path(&#39;../figure&#39;, key)
dir.rds = file.path(&#39;../RDS&#39;, key)
dlist = list(dir.in, dir.fig, dir.gif, dir.rds);
tmp=lapply(dlist, dir.create, showWarnings = F, recursive = T)

crs0=crs(&#39;+init=epsg:4326&#39;)
sp.prov = readRDS( file = file.path(dir.rds, &#39;province.RDS&#39;))
sp.cn=readRDS(file = file.path(dir.rds, &#39;map.RDS&#39;))
sp.city = readRDS( file = file.path(dir.rds, &#39;city.RDS&#39;))
sp.riv = readRDS( file = file.path(dir.rds, &#39;riv.RDS&#39;))

# map=readRDS(&#39;../RDS/CONUS.RDS&#39;)
ext=extent(sp.cn)
ia=gArea(sp.cn, byid = T)
id=order(ia, decreasing = T)[1:6]
map=sp.cn[id, ]
map@data=data.frame(1:6)
crs(map)= CRS(&#39;+init=epsg:4326&#39;)
brk = sort(unique(c(-1, 0.2, seq(2 ,10, by = 1)/10) ))
brk = seq(0, 10, 1)/10
# cols=rev(colorspace::diverge_hsv(length(brk) ) )
cols=rev(col.fun(length(brk)));

ncols = length(cols)
pngout&amp;lt;-function(fn, wd = 12, ht = 8){
  png(fn, width=wd, height=ht, unit=&#39;in&#39;, res=150)
}
years = 2010:2017;
years = 2002:2017;
ny=length(years)
# plot(map, axes=T)
# plotclock(time=c(1,NA,NA), add=T, orig=orig, rad=4, val=month.abb, ab=1.2)
if(cn){
  labs=c(&#39;1月&#39;,&#39;2月&#39;,&#39;3月&#39;,&#39;4月&#39;,&#39;5月&#39;,&#39;6月&#39;,&#39;7月&#39;,&#39;8月&#39;,&#39;9月&#39;,&#39;10月&#39;,&#39;11月&#39;,&#39;12月&#39;)
}else{
  labs=month.abb
}
# # library(foreach)
# library(doMC)
# library(doParallel)
# registerDoMC(6)
# plot(r)
iy=1
rid1=which(as.numeric(sp.riv@data$JB) ==1)
rid2=which(as.numeric(sp.riv@data$JB) ==2)
ct.xy=coordinates(sp.city)
ct.txt=as.character(sp.city@data$PINYIN)

theta=1:360-90 - 360/12
cc.cols=col.fun(180)
cc.cols=c(cc.cols, rev(cc.cols))
cc=PCS2CCS(theta=theta, a=0.8)
go&amp;lt;-function(){
  tsd=readRDS(file.path(dir.rds, paste0(key,&#39;.TSD.RDS&#39;)) )
  tsd=cbind(tsd, movingFun(tsd, 12))
  txx=coredata(tsd)
  xt=seq(min(years), max(years), length.out = 12*(diff(range(years))+1) )
  mat=cbind(xt, txx)
}
tsd=go()

# x= foreach (iy = 1:ny) %dopar%{
for(iy in 1:ny){
  yr= years[iy]
  fn.in = file.path(dir.in, paste0(&#39;NDVI&#39;,yr,&#39;.RDS&#39;))
  message(iy,&#39;/&#39;, ny, &#39;\t&#39;,yr, &#39;\t&#39;, fn.in)
  dat = readRDS(fn.in)
  tag = substr(names(dat), 2, nchar(names(dat)) )
  nmon = length(tag)
  for(i in 1:nmon){
    rx=dat[[i]]
    r=mask(rx, map)
    # r=rx
    message(i,&#39;/&#39;, nmon, &#39;\t&#39;, tag[i] )
    ttl = paste0(substr(tag[i], 1,4), &#39;.&#39;, substr(tag[i], 5,6) )
    graphics.off()
    pngout(file.path(dir.gif, paste0(key, tag[i], &#39;.png&#39;)), ht=7, wd=10)
    par(mar=c(2.5,2.5,1,1))
    # plot(map, axes=T)
    plot(map,  border=&#39;gray80&#39;, axes=T, ylim=c(19, 53), xlim=c(74, 135))

    r[r&amp;lt;0]=0
    r[r&amp;gt;1]=1
    plot(add=T, r, breaks=brk, col=cols, legend=FALSE);
    mtext(ttl, side=3, cex=2.5, line=-2, adj=1, font=2, col=&#39;darkgreen&#39;)
    plot(map, add=T, border = 4, lwd=.7, lty=2)
    plot(add=T, sp.prov, border=&#39;gray50&#39;, lwd=.7, lty=2)
    plot(add=T, sp.riv[rid1, ], col=rgb(0,0,1, 0.6), lwd=1.5)
    plot(add=T, sp.riv[rid2, ], col=rgb(0,0,1, 0.6), lwd=.8)
    plot(add=T, sp.city, pch=20, col=&#39;darkgreen&#39;)
    plotStar(ct.xy[1,1], ct.xy[1,2], .5, pch=3, col=2)
    # text(ct.xy, ct.txt, cex=.5)
    grid()
    # xloc=c(0.05, 0.3); yloc=c(0.1,0.13)
    # plot(r, legend.only=TRUE, breaks=brk, col=cols,
    #      smallplot=c(xloc+.03, yloc+.02),
    #      legend.width=5, legend.shrink=.7, cex=5, horizontal=T,
    #      axis.args=list(col.axis=&#39;blue&#39;, lwd = 0,
    #                     font.axis=4, cex.axis=1.5,tck = 0, line=-.85,
    #                     labels=brk, cex.axis=1.2),
    #      legend.args=list(text=&#39;&#39;,col=4, side=3, font=2, cex=1.5)
    # )
    # dev.off();plot(r)

    par(fig=c(c(0.04, 0.305)+.04, c(0.1,0.24)+.03), new=T, mar=c(0,0,0,0))
    tmp=density(r, plot=F)
    plot(tmp$x, tmp$y, type=&#39;l&#39;, axes=F, lwd=2, bg=&#39;gray80&#39;, col=3,
         xlim=c(0,1), ylim=c(-1,4.5))
    plot(r, legend.only=TRUE, breaks=brk, col=cols,
         smallplot=c(.0, 1, .0, .13),
         legend.width=5, legend.shrink=.7, cex=5, horizontal=T,
         axis.args=list(col.axis=&#39;blue&#39;, lwd = 0,
                        font.axis=1, cex.axis=1, tck = 0, line=-.85,
                        labels=brk, cex.axis=1.2),
         legend.args=list(text=&#39;&#39;,col=4, side=3, font=1, cex=1.5)
    )

    x.mon=as.numeric(substr(tag[i], 5,6))
    if(cn){
      par(fig=c(c(0.3, 0.55)+.1, c(0.6,0.85)+.05), new=T, mar=c(0,0,0,0),
          family=&#39;STKaiti&#39;)
    }else{
      par(fig=c(c(0.3, 0.55)+.1, c(0.6,0.85)+.05), new=T, mar=c(0,0,0,0))
    }
    plot(0, type=&#39;n&#39;, axes=F, xlab=&#39;&#39;, ylab=&#39;&#39;, xlim=c(-1,1)*1.5, ylim=c(-1,1)*1.5, asp=1)
    plotclock(time=c(x.mon,NA,NA),rad=1, val=labs, axes=F, add=T, fun.plot = polygon,
    val.arg = list(col=4, cex=.95))
    # color ring.
    points(cc, col=cc.cols, cex=1.4, pch=19)
    # text(0, 0, ttl, col=&#39;gray&#39;, cex=1.2)
    text(0, 0, years[iy], col=&#39;darkgreen&#39;, cex=1.5)
    text(0, -0.4, &amp;quot;Lele Shu&amp;quot;, col=&#39;gray40&#39;, cex=.7, font=2, family=&#39;Kaiti SC&#39;)
    # South Sea
    par(fig=c(c(0.7, 0.9)+.08, c(0.1,0.4)-.029), new=T, mar=c(0,0,0,0))
    plot(sp.cn, type=&#39;n&#39;, axes=F, xlab=&#39;&#39;, ylab=&#39;&#39;,
         xlim=c(105,125), ylim=c(6,20))
    plot(add=T, sp.riv[c(rid1,rid2), ], col=rgb(0,0,1, 0.6), lwd=1)
    box(lty=&#39;solid&#39;); grid()
    axis(side=3, cex.axis=.5, tick=NULL, lwd=0, line=-1, font=2)
    axis(side=2, cex.axis=.5, tick=NULL, lwd=0, line=-1, font=2)
    plot(add=T, r, breaks=brk, col=cols, legend=FALSE);
    #     TREND
    par(fig=c(c(0.04, 0.4)+.04, c(0.1,0.2)+.75), mgp = c(0, 1, 0), new=T, mar=c(0,0,0,0))
    matplot(tsd[,1], tsd[,-1], xlab=&#39;&#39;, ylab=&#39;&#39;, type=&#39;l&#39;, axes=F,
            col=c(&#39;darkgreen&#39;, &#39;red&#39;), lwd=c(1,2), lty=1);
    axis(side=1, at=years, cex.axis=.7, font.axis=4)
    tid=i+(iy-1)*12
    points(tsd[tid, 1], tsd[tid, 2], pch=20, col=&#39;darkgreen&#39;, cex=2);
    mtext(side=2, &#39;Mean&#39;)
    dev.off()
    # stop(&#39;stop&#39;)
  }
}

fps=6
fn.mov = file.path(dirname(dir.gif), paste0(key,&#39;_&#39;, fps,&#39;fps.mp4&#39;) )
cmd = paste(&#39;ffmpeg -r &#39;, fps,  &#39;-f image2 -s 1920x1080 -i &#39;,
            paste0(&amp;quot;&#39;&amp;quot;, dir.gif, &#39;/*.png&#39;, &amp;quot;&#39;&amp;quot;),
             &#39;-vcodec libx264 -crf 25  -pix_fmt yuv420p&#39;, fn.mov)
print(cmd)
system(cmd)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Monthly NDVI change in USA and Global from 2002-2017</title>
      <link>https://www.shulele.net/en/post/20190627_ndvi/</link>
      <pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://www.shulele.net/en/post/20190627_ndvi/</guid>
      <description>

&lt;!-- ![Global NDVI](featured.png) --&gt;

&lt;p&gt;The normalized difference vegetation index (NDVI) is a simple graphical indicator that reflect the greenness and the heath condition of vegetations.&lt;/p&gt;

&lt;p&gt;The raw data is from &lt;a href=&#34;https://modis.gsfc.nasa.gov/data/dataprod/mod13.php&#34; target=&#34;_blank&#34;&gt;NASA MOD13A&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The global NDVI variation from 2002 to 2017.&lt;/li&gt;
&lt;/ul&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/7yyPfozr1PU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The NDVI varies from 2002 to 2017 in US (Continental)

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/LL0qRwLLd1g&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&#34;how-to-download-the-rawdata&#34;&gt;How to download the rawdata&lt;/h2&gt;

&lt;p&gt;The code of the monthly NDVI from MODIS dataset is MOD13C2, so type the code below in your terminal and the wget will download all availalble data from server to you local matchine.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget  --user=XXXXX --password=XXXX -r -c -np -x https://e4ftl01.cr.usgs.gov/MOLT/MOD13C2.006/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;The R package RoundAndRound and PIHMgisR is used for this data processing and visulization.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hydrologic modeling in project HYPERION</title>
      <link>https://www.shulele.net/en/project/hyperion/</link>
      <pubDate>Sat, 23 Feb 2019 21:13:14 +0000</pubDate>
      <guid>https://www.shulele.net/en/project/hyperion/</guid>
      <description>

&lt;h2 id=&#34;introduction-of-hyperion-i-class-fas-fa-external-link-alt-i-https-climate-ucdavis-edu-hyperion&#34;&gt;Introduction of HYPERION &lt;a href=&#34;https://climate.ucdavis.edu/hyperion/&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The objective of HYPERION is the development of a comprehensive regional hydroclimate data assessment capability focused on feature-specific metrics and stakeholder-relevant outcomes. The secondary objective of this proposal is to leverage this assessment capability to improve our ability to predict these outcomes, by identifying the process-level drivers of outcome biases and evaluating the most appropriate and efficient ways to couple climate models, hydrologic models, and models of human impacts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;fig/hyperion.png&#34; alt=&#34;HYPERION logo&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;tasks-in-hydrologic-modeling&#34;&gt;Tasks in hydrologic modeling&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Develop a hydrologic modeling system for both the Sacramento watershed and several subcatchments.  Calculate key hydrological metrics, including stream flow, groundwater table, soil moisture, and snow pack.&lt;/li&gt;
&lt;li&gt;Evaluate the quality of the hydrologic model and identify potential issues related to its performance.&lt;/li&gt;
&lt;li&gt;Develop a statistical downscaling technique using both traditional statistical and machine learning methods that digests input to the hydrologic model and mimics the output of the model.&lt;/li&gt;
&lt;li&gt;Determine which input variables are most relevant for producing an accurate statistical model.&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Spatial Data&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Annual Precipitation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;fig/pihmdata.png&#34; alt=&#34;Data&#34; /&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;fig/AnnualPRCP.png&#34; alt=&#34;Precipitation&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;sacramento-watershed&#34;&gt;Sacramento Watershed&lt;/h2&gt;

&lt;p&gt;The Sacramento River flows from Southern Oregon and to San Francisco Bay. Total drainage area is ~72000 km2. Elevation ranges from 0 to 4200m. The climate in SW is semi-arid hot Mediterranean. The spatial climatic characteristics are not only affected by latitude, terrain and snow coverage, but also by wind and ocean currents. Dramatic seasonal and annual climatic variations exist as well as large spatial heterogeneity. The mountains on the eastern and northern edges of the domain accumulate rain and snow which funnels into the groundwater of the whole watershed.  Annual precipitation ranges from 400 mm/year to 1500 mm/year, however extreme annual precipitation was more than 4000 mm/year in Northern mountainous area in 1983, and mean precipitation was only 270 mm/year from the 2013 extreme drought year.&lt;/p&gt;

&lt;figure class=&#34;image&#34;&gt;
  &lt;img src=&#34;fig/Animation.gif&#34;, width=400px&gt;
  &lt;figcaption&gt;Animation of spatial annual precipitation in Sacramento Watershed&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Monthly variation of precipitation in Sacramento Watershed&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Annual precipitation variation from 1979 to 2017 based on NLDAS data&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;fig/prcp_boxMonth.png&#34; alt=&#34;Data&#34; /&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;fig/prcp_boxyr.png&#34; alt=&#34;Precipitation&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;simulation-and-results&#34;&gt;Simulation and Results&lt;/h2&gt;

&lt;p&gt;The calibration of the PIHM model used the Covariance Matrix Adaptation Evolution Strategy (CMA-ES) (Hansen 2006,Auger 2005). The automatic CMA-ES calibration is robust and able to converge to global optimization with low computing cost.&lt;/p&gt;

&lt;h3 id=&#34;river-discharge&#34;&gt;River discharge&lt;/h3&gt;

&lt;p&gt;The stream flow in the watershed follows the seasonal variation of precipitation. During drought years, the base flow from groundwater depletion contributes to the streamflow, and the excess infiltration replenishes ground water in wet seasons. For small watersheds in the Central Valley, such as catchment #9 where precipitation is less and the aquifer is thicker, the contribution from groundwater is small.
&lt;figure class=&#34;image&#34;&gt;
  &lt;img src=&#34;fig/calib.png&#34;&gt;
  &lt;figcaption&gt;Calibration based on discharge of four subcatchments&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;h3 id=&#34;ground-water-variation&#34;&gt;Ground water variation&lt;/h3&gt;

&lt;p&gt;The ground water near the river channel is shallower than the hill-slope. The spatial distribution pattern of ground water is controlled by topography, soil/geology characteristics and shape of the watershed. Steep slopes store less ground water than moderate slopes, because a steep hydraulic gradient on steep slopes drive the lateral groundwater flow.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;fig/GWmap.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;fig/gwd.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Ground water spatial distribution&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Temporal fluctuation from 2000 to 2017.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Ground water seasonal fluctuation follows the climatic variation. However, the seasonal variations in some catchments are relatively larger than others. The inter-annual variation in #5 sub-catchment is larger than seasonal variation. Although the annual precipitation trends in each sub-catchments are comparable, the trend in multiple-year changes of ground water table varies. This requires further analysis on water balance and the memory effect of ground water storage.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The project to plot planets/objects in space and orbital movement.</title>
      <link>https://www.shulele.net/en/post/20190129roundandround/</link>
      <pubDate>Tue, 29 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://www.shulele.net/en/post/20190129roundandround/</guid>
      <description>&lt;p&gt;I planed to write an R package and submit on CRAN, that can plot the planets orbiting in Solar System, or satellite/moon orbiting around earth. That package must plot the moving planets, the moon, moon phase and satellite in 2D or 3D canvas. In future, it may calculate the orbit based on orbit mechanics.&lt;/p&gt;

&lt;p&gt;My son loves the song “The wheels on the bus go round and round“, and he has an obsession on planets. He asks mommy play the solar system documentary every night when we ask him to brush his teeth.  So I decided to plot the moving planets in solar system for him with the scientific knowledge I know.&lt;/p&gt;

&lt;p&gt;|My son is obsessed by the planets and stars|
  |:&amp;ndash;|
  | &lt;img src=&#34;photo.png&#34; alt=&#34;classroom.jpg&#34; /&gt; |&lt;/p&gt;

&lt;p&gt;Another motivation is from the Chinese lunar exploration, Chang-E 5 landing on far-side of the moon.  Lots of people discussed it and were fuddled on the rotation of moon and relation between the earth and the moon.&lt;/p&gt;

&lt;p&gt;Furthermore, I kept thinking the Chinese semi-lunar calendar for many years, I know the founder mental logic and algorithm of the calendar in my mind, but never scratched the equations and numbers in paper yet.  This calendar is determined by the moon phase and the position of the earth in orbit. Definitely the solver in papers are more rousted in my brain.&lt;/p&gt;

&lt;p&gt;Let’s see what I got, by now.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;The idea of the Moon and the Sun are moving around the Earth, when we assume the earth is the center of system. The orbital period of the moon is 27.321 day, but the synodic period is 29.53 day, that because the sun moves 27.&lt;sup&gt;321&lt;/sup&gt;&amp;frasl;&lt;sub&gt;365&lt;/sub&gt;.25 in its sun’s orbit when the moon moves in the moon’s orbit. It requires 2.2 days to let the sun and the moon to face-to-face again.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;Moon0.png&#34; alt=&#34;classroom.jpg&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;|The position of the Moon and the Sun in an earth year (365 day). The right legend shows the moon phase in 30 days. The concentric orbits are numbers of the moon periods.|
  |:&amp;ndash;|
  | &lt;img src=&#34;Moon_year365.png&#34; alt=&#34;classroom.jpg&#34; /&gt; |&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Volunteer for Kids Discovering Science project in California</title>
      <link>https://www.shulele.net/en/post/20190129kids-ucd/</link>
      <pubDate>Tue, 29 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://www.shulele.net/en/post/20190129kids-ucd/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://kidsdiscoveringscience.wordpress.com/about/&#34; target=&#34;_blank&#34;&gt;external_link of the project&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;motivation-of-the-project&#34;&gt;Motivation of the project&lt;/h2&gt;

&lt;p&gt;This is fantastic program to teach the local kids and lead them into the discovering sciences.&lt;/p&gt;

&lt;p&gt;| Panoview of the Math&amp;amp;Science classroom.|
  |:&amp;ndash;|
  | &lt;img src=&#34;Classroom.jpg&#34; alt=&#34;classroom.jpg&#34; /&gt; |&lt;/p&gt;

&lt;h4 id=&#34;week-03&#34;&gt;Week 03:&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Week 03: Jessica is writing students observation and discussion of plants in two different soils (Sperpentine and sandy loam).&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;L03.jpg&#34; alt=&#34;L03.jpg&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;week-05&#34;&gt;Week 05:&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Week 05: The growth condition of their beans.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;L05.jpg&#34; alt=&#34;L05.jpg&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Week 05: One question from students&amp;rsquo; question box. Question: Why are my plants leaves sticky?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;QA05.jpg&#34; alt=&#34;QA05.jpg&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Reconstructing the role of landuse change on water yield at the Maya urban</title>
      <link>https://www.shulele.net/en/project/tikal/</link>
      <pubDate>Sat, 23 Jul 2016 21:13:14 -0500</pubDate>
      <guid>https://www.shulele.net/en/project/tikal/</guid>
      <description>

&lt;h2 id=&#34;introduction-of-project&#34;&gt;Introduction of project&lt;/h2&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;fig/Locations.png&#34; data-caption=&#34;Location of Tikal&#34;&gt;
&lt;img src=&#34;fig/Locations.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Location of Tikal
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;h2 id=&#34;tasks-in-hydrologic-modeling&#34;&gt;Tasks in hydrologic modeling&lt;/h2&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;fig/LandUse.png&#34; data-caption=&#34;Land use map of Tikal&#34;&gt;
&lt;img src=&#34;fig/LandUse.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Land use map of Tikal
  &lt;/figcaption&gt;


&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;fig/tk_dem_lan.png&#34; data-caption=&#34;Elevation of Tikal&#34;&gt;
&lt;img src=&#34;fig/tk_dem_lan.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Elevation of Tikal
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;h2 id=&#34;accomplishment-of-the-project&#34;&gt;Accomplishment of the project&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;keep updating&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Impact in hydrology from landuse and climate change</title>
      <link>https://www.shulele.net/en/project/stormwater/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 +0000</pubDate>
      <guid>https://www.shulele.net/en/project/stormwater/</guid>
      <description>

&lt;h2 id=&#34;introduction-of-project&#34;&gt;Introduction of project&lt;/h2&gt;

&lt;h2 id=&#34;tasks-in-hydrologic-modeling&#34;&gt;Tasks in hydrologic modeling&lt;/h2&gt;

&lt;h2 id=&#34;accomplishment-of-the-project&#34;&gt;Accomplishment of the project&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;keep updating&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
